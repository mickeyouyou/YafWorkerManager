#!/bin/bash

# beanstalk worker manager

### BEGIN INIT INFO
# Provides:          beanstalk-manager
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable beanstalk manager daemon
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

# Notice
# ln -s /path/to/Bin/worker-beanstalk-manager.php /usr/local/bin/beanstalk-manager
##PATH##
DAEMON=/usr/local/bin/beanstalk-manager
PIDDIR=/data/logs/beanstalk
PIDFILE=${PIDDIR}/manager.pid
LOGFILE=${PIDDIR}/beanstalk-manager.log
CONFIGDIR=/path/to/Worker/Bin
BEANSTALKUSER="root"
PARAMS="-p Worker -c ${CONFIGDIR}/beanstalk-config.ini -vvvv"

RETVAL=0

base=${0##*/}
wait_for_pid () {
    try=0
    if [ "$1" == "created" ]; then
        echo -n "Starting ${base}"
    fi

    if [ "$1" == "removed" ]; then
        echo -n "Stopping ${base}"
    fi

    while test $try -lt 60 ; do

        case "$1" in
            'created')
            if [ -f "$2" ] ; then
                try=''
                break
            fi
            ;;

            'removed')
            if [ ! -f "$2" ] ; then
                try=''
                break
            fi
            ;;
        esac

        try=`expr $try + 1`
        sleep 1

    done
}

start() {
        if ! test -d ${PIDDIR}
        then
          mkdir ${PIDDIR}
          chown ${BEANSTALKUSER} ${PIDDIR}
        fi

        daemon --pidfile=$PIDFILE $DAEMON \
            -P $PIDFILE \
            -u $BEANSTALKUSER \
            -l $LOGFILE \
            -d \
            $PARAMS
        RETVAL=$?

        wait_for_pid created $PIDFILE
        echo $" done."
        return $RETVAL
}

stop() {
        killproc -p $PIDFILE -TERM $DAEMON
        RETVAL=$?
        wait_for_pid removed $PIDFILE
        echo $" done."
        return $RETVAL
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status -p $PIDFILE $DAEMON
        RETVAL=$?
        ;;
  restart|reload)
        stop
        start
        ;;
  condrestart|try-restart)
        if status -p $PIDFILE $DAEMON >&/dev/null; then
                stop
                start
        fi
        ;;
  *)
        echo $"Usage: $prog {start|stop|restart|reload|condrestart|status|help}"
        RETVAL=3
esac

exit $RETVAL
